

var _presets_table = {

    'none': ``,

    'lorenz': `{"R":{"rayBatch":128,"maxTimeSteps":128,"maxIterations":100,"integrationTime":1,"gridSpace":0.15440285248241178,"record_realtime":true,"xmin":-29.703284119569204,"xmax":36.41007732067149,"ymin":-30.761883867431244,"ymax":34.8976678036754,"zmin":-7.099020364369787,"zmax":58.552581487655026,"clipToBounds":true,"showBounds":true,"exposure":-5.367914425527647,"gamma":2.2,"subtractive_color":false,"bgColor":[0,0,0],"tubeWidth":0.001,"tubeSpread":false,"hairShader":true,"hairShine":10,"hairSpecColor":[1,1,1],"depthTest":false,"dash_spacing":0.05,"dash_speed":10,"dash_size":0.5,"dashes":false},"C":{"pos":[-131.60092964225197,56.140558643067735,-47.49358251457521],"tar":[3.616476685246679,-9.15130126660645,24.575792393973554],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Lorenz attractor\\n///////////////////////////////////////////\\n\\nconst float rho   = float(28.0);     \\nconst float sigma = float(10.0);\\nconst float beta  = float(8.0)/float(3.0);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(255,20,55) / 255.0;\\nconst vec3 colHi = rgb(0,40,219) / 255.0;\\nconst float magScale = float(195);\\n\\n vec3 velocity(vec3 p, float t)\\n {\\n     vec3 v;\\n     float x = p.x;\\n     float y = p.y;\\n     float z = p.z;\\n     v.x = sigma*(y - x);\\n     v.y = x*(rho - z);\\n     v.z = x*y - beta*z;\\n     return v;\\n }    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 E = velocity(p, t);\\n  \\tfloat mag2 = dot(E,E) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'dipole': `{"R":{"rayBatch":138,"maxTimeSteps":200,"maxIterations":523.1983407359041,"integrationTime":5,"integrateForward":false,"gridSpace":0.11028775177315127,"record_realtime":true,"xmin":-2.26270133836598,"xmax":2.1372986616340204,"ymin":-2.6026081243858643,"ymax":2.289109496916927,"zmin":-0.5292993077458352,"zmax":0.293720152427974,"clipToBounds":false,"showBounds":true,"exposure":-2.5000027573519272,"gamma":2.2,"subtractive_color":false,"bgColor":[0,0,0],"tubeWidth":0.0033086325531945385,"tubeSpread":false,"specShine":15.440285248241178,"specColor":[0.019607843137254943,0.019607843137254943,0.019607843137254943],"depthTest":true,"dash_spacing":0.4963233469399448,"dash_speed":10,"dash_size":0.3088234158737434,"dashes":false,"hairShader":true,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[-2.9806983455175704,0.6919297069188497,-6.0316836326670416],"tar":[-0.2264894540590715,-0.2861774462838242,0.24636753499397263],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"///////////////////////////////////////////\\n// Dipole field\\n///////////////////////////////////////////\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(0,6,183) / 255.0;\\nconst vec3 colHi = rgb(239,11,0) / 255.0;\\nconst float magScale = 2.4;\\n\\nvec3 E(float q, in vec3 p, vec3 c)\\n{\\n    vec3 pc = p - c;\\n    float r2 = dot(pc, pc);\\n    vec3 E = q * (p-c) / (pow(r2, 1.5) + 1.0e-2);\\n    return E;\\n}\\n\\nvec3 velocity(vec3 p, float t)\\n{\\n    vec3 x0 = vec3(0,  0.5, 0);\\n    vec3 x1 = vec3(0, -0.5, 0);\\n    return E(-1.0, p, x0) + E(1.0, p, x1);\\n}    \\n\\nvec3 color(vec3 p, float t)\\n{\\n    vec3 E = velocity(p, t);\\n  \\tfloat mag2 = dot(E,E) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'quadrupole': `{"R":{"rayBatch":128,"maxTimeSteps":319,"maxIterations":100,"integrationTime":10,"gridSpace":0,"record_realtime":true,"xmin":-0.9669137035558169,"xmax":1.0330862964441834,"ymin":-0.8397981313184116,"ymax":1.0983277029588778,"zmin":-0.8517073324695545,"zmax":0.8906642808163128,"clipToBounds":false,"showBounds":true,"exposure":-4.265036907796134,"gamma":2.2,"subtractive_color":false,"bgColor":[0,0,0],"tubeWidth":0,"tubeSpread":false,"hairShader":false,"hairShine":10,"hairSpecColor":[1,1,1],"depthTest":false,"dash_spacing":0.3308632553194538,"dash_speed":11.028775177315127,"dash_size":0.7720142624120588,"dashes":false},"C":{"pos":[3.5044845511772165,0.8172274498976062,-6.700395192068965],"tar":[-0.07949848674249538,-0.03437843530486278,0.030694790099949094],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"///////////////////////////////////////////\\n// Quadrupole field\\n///////////////////////////////////////////\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(0,20,209) / 255.0;\\nconst vec3 colHi = rgb(255,20,51) / 255.0;\\nconst float magScale = float(4.7731968);\\n\\nconst float q1 = 1.0;\\nconst float q2 = 1.0;\\nconst float q3 = -1.0;\\nconst float q4 = -1.0;\\n\\nvec3 E(float q, in vec3 p, vec3 c)\\n{\\n    vec3 pc = p - c;\\n    float r2 = dot(pc, pc);\\n    vec3 E = q * (p-c) / (pow(r2, 1.5) + 1.0e-2);\\n    return E;\\n}\\n\\nvec3 velocity(vec3 p, float t)\\n{\\n    vec3 x1 = vec3(0,  0.5, 0);\\n    vec3 x2 = vec3(0, -0.5, 0);\\n  \\tvec3 x3 = vec3(0.5,  0, 0);\\n    vec3 x4 = vec3(-0.5, 0, 0);\\n    return  E(q1, p, x1) + E(q2, p, x2)\\n          + E(q3, p, x3) + E(q4, p, x4);\\n}    \\n\\nvec3 color(vec3 p, float t)\\n{\\n    vec3 E = velocity(p, t);\\n  \\tfloat mag2 = dot(E,E) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'lorenz2': `{"R":{"rayBatch":128,"maxTimeSteps":319,"maxIterations":100,"integrationTime":2,"gridSpace":0.18748917801435716,"record_realtime":false,"xmin":-34.251030587295915,"xmax":-29.12282936183321,"ymin":15.842657555872435,"ymax":18.631080771886623,"zmin":-7.86202193786743,"zmax":6.529305756707535,"clipToBounds":false,"showBounds":true,"exposure":-0.956404354601597,"gamma":0.4632085574472353,"subtractive_color":false,"bgColor":[0.196078431372549,0.196078431372549,0.196078431372549],"tubeWidth":0.009815609907810463,"tubeSpread":false,"specShine":2.2057550354630253,"specColor":[0.7352941176470589,0.598327566320646,0.598327566320646],"depthTest":true,"dash_spacing":0.05,"dash_speed":10,"dash_size":0.5,"dashes":false,"hairShader":true,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[-135.64169107528676,47.79408021315483,-1.008157834627287],"tar":[-1.7522028773762353,-13.09067808599392,30.002818912941958],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Lorenz attractor\\n///////////////////////////////////////////\\n\\nconst float rho   = float(28.0);     \\nconst float sigma = float(10.0);\\nconst float beta  = float(8.0)/float(3.0);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(255,255,255) / 255.0;\\nconst vec3 colHi = rgb(252,213,130) / 255.0;\\nconst float magScale = float(195);\\n\\n vec3 velocity(vec3 p, float t)\\n {\\n     vec3 v;\\n     float x = p.x;\\n     float y = p.y;\\n     float z = p.z;\\n     v.x = sigma*(y - x);\\n     v.y = x*(rho - z);\\n     v.z = x*y - beta*z;\\n     return v;\\n }    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 E = velocity(p, t);\\n  \\tfloat mag2 = dot(E,E) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'lorenz3': `{"R":{"rayBatch":128,"maxTimeSteps":319,"maxIterations":100,"integrationTime":4,"integrateForward":true,"gridSpace":0.2536618290782479,"tubeWidth":0.030880570496482358,"tubeSpread":false,"record_realtime":false,"xmin":-30.490255037216784,"xmax":-25.36205381175408,"ymin":20.56811055216703,"ymax":23.35653376818122,"zmin":-8.368845891054127,"zmax":6.022481803520838,"clipToBounds":false,"showBounds":true,"exposure":1.0287751773151257,"gamma":1.3565393468097606,"subtractiveColor":true,"bgColor":[1,1,1],"hairShader":false,"specShine":1.1028775177315127,"specColor":[1,1,1],"depthTest":true,"dash_spacing":0.05,"dash_speed":10,"dash_size":0.5,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[-97.24813641850449,44.80839194778983,46.29889623164527],"tar":[-1.0560348651126519,-7.884391053452633,32.88240073132292],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Lorenz attractor\\n///////////////////////////////////////////\\n\\nconst float rho   = float(28.0);     \\nconst float sigma = float(10.0);\\nconst float beta  = float(8.0)/float(3.0);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(12,31,140) / 255.0;\\nconst vec3 colHi = rgb(3,42,149) / 255.0;\\nconst float magScale = float(195);\\n\\n vec3 velocity(vec3 p, float t)\\n {\\n     vec3 v;\\n     float x = p.x;\\n     float y = p.y;\\n     float z = p.z;\\n     v.x = sigma*(y - x);\\n     v.y = x*(rho - z);\\n     v.z = x*y - beta*z;\\n     return v;\\n }    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 E = velocity(p, t);\\n  \\tfloat mag2 = dot(E,E) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Bouali': `{"R":{"rayBatch":128,"maxTimeSteps":100,"maxIterations":100,"integrationTime":1,"integrateForward":false,"gridSpace":0.09925897659583614,"tubeWidth":0.006617265106389077,"tubeSpread":false,"record_realtime":true,"xmin":-8.829539283939564,"xmax":9.903769023208408,"ymin":0.3290243966586708,"ymax":17.572056354637702,"zmin":-4.8609037539117805,"zmax":0.21825086626014745,"clipToBounds":false,"showBounds":true,"exposure":-0.956404354601597,"gamma":2.2,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":63.96689602842773,"specColor":[0.009803921568627416,0.009803921568627416,0.009803921568627416],"depthTest":true,"dash_spacing":0.05,"dash_speed":10,"dash_size":0.5,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[-2.766981398553995,20.78987686674837,-47.585741532361425],"tar":[0.12023323834550563,10.417230908366076,-2.158778608338135],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Bouali attractor\\n///////////////////////////////////////////\\n\\nconst float a     = float(4.0);\\nconst float b     = float(1.0);\\nconst float alfa  = float(0.3); \\nconst float beta  = float(0.05);\\nconst float c     = float(1.5);\\nconst float s     = float(1.0);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(255,20,55) / 255.0;\\nconst vec3 colHi = rgb(0,40,219) / 255.0;\\nconst float magScale = float(195.0);\\n\\n vec3 velocity(vec3 p, float t)\\n {\\n     vec3 v;\\n     float x = p.x;\\n     float y = p.y;\\n     float z = p.z;\\n     v.x = x*(a - y) + alfa*z;\\n     v.y = -y*(b - x*x);\\n     v.z = -x*(c - s*z) - beta*z;\\n     return v;\\n }    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n  \\tfloat mag2 = dot(v,v) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Rucklidge': `{"R":{"rayBatch":128,"maxTimeSteps":229,"maxIterations":100,"integrationTime":20,"integrateForward":true,"gridSpace":0.02205470448901459,"tubeWidth":0.017646040283704204,"tubeSpread":false,"record_realtime":true,"xmin":-4.78336690887873,"xmax":-2.641086528990934,"ymin":-3.032653841135736,"ymax":-2.735037132261242,"zmin":14.01058998496064,"zmax":16.83765071384898,"clipToBounds":false,"showBounds":true,"exposure":-1.0,"gamma":0.9924617020056565,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":100,"specColor":[0.019532750880881133,0.019532750880881133,0.019532750880881133],"depthTest":true,"dash_spacing":0.5403402599808574,"dash_speed":33.08205673352189,"dash_size":0.9152702362941055,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[-12.039039508913065,-0.7245855316632768,25.386883330987434],"tar":[-0.1334688396781879,1.458845410788792,8.781468223854677],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Rucklidge attractor\\n///////////////////////////////////////////\\n\\nconst float kappa = float(1.84);\\nconst float alpha = float(6.7);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(254,45,73) / 255.0;\\nconst vec3 colHi = rgb(5,138,255) / 255.0;\\nconst float magScale = float(8);\\n\\n vec3 velocity(vec3 p, float t)\\n {\\n     vec3 v;\\n     float x = p.x;\\n     float y = p.y;\\n     float z = p.z;\\n     v.x = -kappa*x + alpha*y - y*z;\\n     v.y = x;\\n     v.z = -z + y*y;\\n     return v;\\n }    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n  \\tfloat mag2 = dot(v,v) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Chen-Lee': `{"R":{"rayBatch":128,"maxTimeSteps":229,"maxIterations":100,"integrationTime":3,"integrateForward":true,"gridSpace":0.011027352244507268,"tubeWidth":0.017646040283704204,"tubeSpread":false,"record_realtime":true,"xmin":-0.3532812091249735,"xmax":0.8448836751440716,"ymin":-2.711585912278618,"ymax":-1.1633506330323375,"zmin":4.302847553404762,"zmax":6.395510861086638,"clipToBounds":false,"showBounds":true,"exposure":-1.0, "gamma":0.5623949644698707,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":49.62308510028271,"specColor":[0.00972807838969003,0.00972807838969003,0.00972807838969003],"depthTest":true,"dash_spacing":0.5403402599808574,"dash_speed":33.08205673352189,"dash_size":0.9152702362941055,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[16.173410921349486,-0.151374674091592,34.70317281488655],"tar":[1.7603809215749426,2.514326641484576,9.626441694744791],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Chen-Lee attractor\\n///////////////////////////////////////////\\n\\nconst float a = float(5.0);\\nconst float b = float(-10.0);\\nconst float c = float(-0.38);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(255,61,87) / 255.0;\\nconst vec3 colHi = rgb(86,176,254) / 255.0;\\nconst float magScale = float(8);\\n\\nvec3 velocity(vec3 p, float t)\\n{\\n    vec3 v;\\n    float x = p.x;\\n    float y = p.y;\\n    float z = p.z;\\n    v.x = a*x - y*z;\\n    v.y = b*y + x*z;\\n    v.z = c*z + x*y;\\n    return v;\\n}    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n    float mag2 = dot(v,v) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Chen-Lee 2': `{"R":{"rayBatch":128,"maxTimeSteps":229,"maxIterations":100,"integrationTime":3,"integrateForward":true,"gridSpace":0.011027352244507268,"tubeWidth":0.017646040283704204,"tubeSpread":false,"record_realtime":true,"xmin":0.02010212572027359,"xmax":1.2182670099893187,"ymin":-0.9848050162119315,"ymax":0.5634302630343488,"zmin":4.279970898436462,"zmax":6.372634206118338,"clipToBounds":false,"showBounds":true,"exposure":-1,"gamma":0.5623949644698707,"contrast":1,"saturation":1.2572082697836626,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":49.62308510028271,"specColor":[0.00972807838969003,0.00972807838969003,0.00972807838969003],"depthTest":true,"dash_spacing":0.5403402599808574,"dash_speed":33.08205673352189,"dash_size":0.9152702362941055,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[37.19961475590319,-7.978027406435391,48.53676804048008],"tar":[-0.15141005969009372,3.4297889881802406,11.601696623584578],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Chen-Lee attractor\\n///////////////////////////////////////////\\n\\nconst float a = float(6);\\nconst float b = float(-10.0);\\nconst float c = float(-0.38);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(255,61,87) / 255.0;\\nconst vec3 colHi = rgb(57,162,254) / 255.0;\\nconst float magScale = float(0.5);\\n\\nvec3 velocity(vec3 p, float t)\\n{\\n    vec3 v;\\n    float x = p.x;\\n    float y = p.y;\\n    float z = p.z;\\n    v.x = a*x - y*z;\\n    v.y = b*y + x*z;\\n    v.z = c*z + x*y;\\n    return v;\\n}    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n    float mag2 = t/magScale;\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Lorenz': `{"R":{"rayBatch":128,"maxTimeSteps":229,"maxIterations":100,"integrationTime":2,"integrateForward":true,"gridSpace":0.033082056733521804,"tubeWidth":0.013232822693408723,"tubeSpread":false,"record_realtime":true,"xmin":-7.1772934058834785,"xmax":1.4364087801536733,"ymin":-2.6918584299868207,"ymax":3.673119697483982,"zmin":13.147983951979501,"zmax":15.479497668884303,"clipToBounds":false,"showBounds":true,"exposure":-0.7363601173835388,"gamma":0.9924617020056565,"contrast":1,"saturation":1.2902926979358642,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":3.3082056733521803,"specColor":[0.9019532750880881,0.8931099186234921,0.8931099186234921],"depthTest":true,"dash_spacing":0.5403402599808574,"dash_speed":33.08205673352189,"dash_size":0.9152702362941055,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[11.644245272378662,-74.69802545178034,62.452807549526426],"tar":[-3.175660060524133,-2.2604335186724938,29.314044590280503],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Lorenz attractor\\n///////////////////////////////////////////\\n\\nconst float kappa = float(1.84);\\nconst float alpha = float(6.7);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(254,45,73) / 255.0;\\nconst vec3 colHi = rgb(5,138,255) / 255.0;\\nconst float magScale = float(0.6);\\n\\nconst float rho   = float(28.0);     \\nconst float sigma = float(10.0);\\nconst float beta  = float(8.0)/float(3.0);\\n\\n\\n vec3 velocity(vec3 p, float t)\\n {\\n     vec3 v;\\n     float x = p.x;\\n     float y = p.y;\\n     float z = p.z;\\n     v.x = sigma*(y - x);\\n     v.y = x*(rho - z);\\n     v.z = x*y - beta*z;\\n     return v;\\n }    \\n \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n  \\tfloat mag2 = t/magScale;\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Nose-Hoover': `{"R":{"rayBatch":128,"maxTimeSteps":256,"maxIterations":100,"integrationTime":25,"integrateForward":true,"gridSpace":0.033082056733521804,"tubeWidth":0.013232822693408723,"tubeSpread":false,"record_realtime":true,"xmin":-0.36577634471661113,"xmax":0.4826952420388255,"ymin":-1.1874611645765958,"ymax":1.0248332836093539,"zmin":-4.291789135677525,"zmax":-3.291789135677525,"clipToBounds":false,"showBounds":true,"exposure":-1,"gamma":0.9924617020056565,"contrast":1.0587017008704527,"saturation":1.323377126088066,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":3.3082056733521803,"specColor":[0.9019532750880881,0.8931099186234921,0.8931099186234921],"depthTest":true,"dash_spacing":0.5403402599808574,"dash_speed":33.08205673352189,"dash_size":0.9152702362941055,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[6.90074880557503,0.8398369324042654,11.482439487890469],"tar":[-0.07540185408121283,0.05409730881099575,-0.8206753718158661],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Nose-Hoover attractor\\n///////////////////////////////////////////\\n\\nconst float a = float(0.75);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(254,45,73) / 255.0;\\nconst vec3 colHi = rgb(5,138,255) / 255.0;\\nconst float magScale = float(6.8);\\n\\nvec3 velocity(vec3 p, float t)\\n{\\n    vec3 v;\\n    float x = p.x;\\n    float y = p.y;\\n    float z = p.z;\\n    v.x = y;\\n    v.y = -x + y*z;\\n    v.z = a - y*y;\\n    return v;\\n}    \\n \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n  \\tfloat mag2 = t/magScale;\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Aizawa': `{"R":{"rayBatch":128,"maxTimeSteps":229,"maxIterations":100,"integrationTime":12,"integrateForward":true,"gridSpace":0.09925328445660495,"tubeWidth":0.016542214076100823,"tubeSpread":false,"record_realtime":true,"xmin":-1.1680761339300025,"xmax":-0.7025690808840395,"ymin":-0.02703811665804251,"ymax":0.33378120122593874,"zmin":-0.8380702283977942,"zmax":-0.5093769809226579,"clipToBounds":false,"showBounds":true,"exposure":-1.6192122941744778,"gamma":1.0917078722062195,"contrast":1.1247899289397414,"saturation":1.2240360991403068,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":5.514071358700274,"specColor":[1,1,1],"depthTest":true,"dash_spacing":0.5403402599808574,"dash_speed":33.08205673352189,"dash_size":0.9152702362941055,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[0.6154796680618886,0.49379679526896875,-2.5694019285351537],"tar":[-0.30089039388554695,-0.0766105079688651,0.6485921338244964],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Aizawa attractor\\n///////////////////////////////////////////\\n\\nconst float a = float(1.102);\\nconst float b = float(0.8);\\nconst float e = float(1.122);\\nconst float c = float(0.688128);\\nconst float d = float(1.5);\\nconst float f = float(0.1);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(255,61,87) / 255.0;\\nconst vec3 colHi = rgb(86,176,254) / 255.0;\\nconst float magScale = float(0.487999999999999);\\n\\nvec3 velocity(vec3 p, float t)\\n{\\n    vec3 v;\\n    float x = p.x;\\n    float y = p.y;\\n    float z = p.z;\\n    v.x = (z - b)*x - d*y;\\n    v.y = d*x + (z - b)*y;\\n    v.z = c + a*z - (z*z*z/3.0) - (x*x + y*y)*(1.0 + e*z) + f*z*x*x*x;\\n    return v;\\n}    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n    float mag2 = dot(v,v) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Halvorsen': `{"R":{"rayBatch":128,"maxTimeSteps":410,"maxIterations":100,"integrationTime":8,"integrateForward":true,"gridSpace":0.055140713587002746,"tubeWidth":0.03639287096742181,"tubeSpread":false,"record_realtime":true,"xmin":-7.747679856155422,"xmax":-7.282172803109459,"ymin":-7.638797445596754,"ymax":-7.0719214750250945,"zmin":-9.004373090036239,"zmax":-8.478190697671232,"clipToBounds":false,"showBounds":true,"exposure":-1.6192122941744778,"gamma":1.0917078722062195,"contrast":1.1910394134792592,"saturation":1.621136979457881,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":2.2056285434801097,"specColor":[1,1,1],"depthTest":true,"dash_spacing":0.5403402599808574,"dash_speed":33.08205673352189,"dash_size":0.9152702362941055,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[14.679800891415194,10.601311880272494,13.132538160288737],"tar":[-5.583664708407479,-5.138417749605455,-8.54246648392627],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Halvorsen attractor\\n///////////////////////////////////////////\\n\\nconst float a = float(1.4);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(255,61,87) / 255.0;\\nconst vec3 colHi = rgb(86,176,254) / 255.0;\\nconst float magScale = float(1.6224);\\n\\nvec3 velocity(vec3 p, float t)\\n{\\n    vec3 v;\\n    float x = p.x;\\n    float y = p.y;\\n    float z = p.z;\\n    v.x = -a*x - 4.0*y - 4.0*z - y*y;\\n    v.y = -a*y - 4.0*z - 4.0*x - z*z;\\n    v.z = -a*z - 4.0*x - 4.0*y - x*x;\\n    return v;\\n}    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n    float mag2 = t/magScale;\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Hadley': `{"R":{"rayBatch":128,"maxTimeSteps":319,"maxIterations":100,"integrationTime":20,"integrateForward":true,"gridSpace":0.005,"tubeWidth":0.018747842619580932,"tubeSpread":false,"record_realtime":true,"xmin":-1.4863404547326216,"xmax":-1.341301402458992,"ymin":-0.8558446154497694,"ymax":-0.7885123409301031,"zmin":-1.7145159191037938,"zmax":-1.233220965974077,"clipToBounds":false,"showBounds":true,"exposure":-1.177485826079561,"gamma":1.025617272718251,"contrast":1.2902926979358642,"saturation":1.4557148386968723,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":2.2056285434801097,"specColor":[1,1,1],"depthTest":true,"dash_spacing":0.5403402599808574,"dash_speed":33.08205673352189,"dash_size":0.9152702362941055,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[-4.08585834439379,0.6989513654968358,-3.74655230304995],"tar":[0.49485530378148157,-0.10416986390956562,-0.2078196848128587],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Hadley attractor\\n///////////////////////////////////////////\\n\\nconst float a = float(0.2);\\nconst float b = float(4.0);\\nconst float f = float(8.0);\\nconst float g = float(1.0);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(255,61,87) / 255.0;\\nconst vec3 colHi = rgb(86,176,254) / 255.0;\\nconst float magScale = float(3);\\n\\nvec3 velocity(vec3 p, float t)\\n{\\n    vec3 v;\\n    float x = p.x;\\n    float y = p.y;\\n    float z = p.z;\\n    v.x = -y*y -z*z -a*x + a*f;\\n    v.y = x*y - b*x*z - y + g;\\n    v.z = b*x*y + x*z - z;\\n    return v;\\n}    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n    float mag2 = t/magScale;\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`,

    'Rossler': `{"R":{"rayBatch":128,"maxTimeSteps":300,"maxIterations":100,"integrationTime":20,"integrateForward":true,"gridSpace":0.04411257086960219,"tubeWidth":0.030878799608721537,"tubeSpread":false,"record_realtime":true,"xmin":-3.8316398226934205,"xmax":-2.2060314329250943,"ymin":0.2855716567241713,"ymax":1.4951511551685868,"zmin":-6.49211922672249,"zmax":-5.3186950084237985,"clipToBounds":false,"showBounds":true,"exposure":-1.8391743891235937,"gamma":1.025617272718251,"contrast":1.2902926979358642,"saturation":1.2572082697836626,"subtractiveColor":false,"bgColor":[0,0,0],"hairShader":false,"specShine":3.3084428152201646,"specColor":[1,1,1],"depthTest":true,"dash_spacing":0.5403402599808574,"dash_speed":33.08205673352189,"dash_size":0.9152702362941055,"dashes":false,"subtractive_color":false,"hairShine":10,"hairSpecColor":[1,1,1]},"C":{"pos":[-0.6256523188355132,-39.749945369270364,14.990119288217617],"tar":[2.1163938395315953,5.987823511430609,6.550676509757764],"near":0.03464101615137755,"far":34641.016151377546},"E":{"code":"\\n///////////////////////////////////////////\\n// Rossler attractor\\n///////////////////////////////////////////\\n\\nconst float a = float(0.2);\\nconst float b = float(0.2);\\nconst float c = float(5.7);\\n\\n#define rgb vec3\\n\\nconst vec3 colLo = rgb(255,61,87) / 255.0;\\nconst vec3 colHi = rgb(86,176,254) / 255.0;\\nconst float magScale = float(4);\\n\\nvec3 velocity(vec3 p, float t)\\n{\\n    vec3 v;\\n    float x = p.x;\\n    float y = p.y;\\n    float z = p.z;\\n    v.x = -y - z;\\n    v.y = x + a*y;\\n    v.z = b + z*(x - c);\\n    return v;\\n}    \\n \\nvec3 color(vec3 p, float t)\\n{\\n    vec3 v = velocity(p, t);\\n    float mag2 = t/magScale;//dot(v,v) / (magScale*magScale);\\n    float lerp = mag2/(1.0+mag2);\\n    return (1.0-lerp)*colLo + lerp*colHi;\\n}  \\n"}}`

};


var Presets = function()
{
    this.preset_names = [];
    for (var preset_name in _presets_table) {
        if (_presets_table.hasOwnProperty(preset_name)) {
            this.preset_names.push(preset_name);
        }
    }
}

Presets.prototype.get_preset_names = function()
{
    return this.preset_names;
}


Presets.prototype.get_preset = function(preset_name)
{
    return this.preset_names[preset_name];
}

Presets.prototype.load_preset = function(preset_name)
{
    if (preset_name in _presets_table)
    {
        let preset = _presets_table[preset_name];
        let state = JSON.parse(preset);
        fibre.preset_selection = preset_name;
        fibre.load_state(state);
    }
    
}